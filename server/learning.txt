Question 1) Require VS Import

1) Require statement-

                 i) Require is Non-lexical, it stays where they have put the file.
                 ii) It can be called at any time and place in the program.
                 iii) Example -  const express = require('express');

2) Import/Export statement-

                 i) Import is lexical, it gets sorted to the top of the file.
                 ii) It canâ€™t be called conditionally, it always run in the beginning of the file..
                 iii) Example -  import express from 'express';
                 iv)  Using this syntax mention   "type":"module",  in package.json ;

-----------------------------------------------------------------------------------------------------------------------

Question 2) package.json VS package-lock.json

1) package.json-

                 i) It Include the metadata of application like - Name , version , description , dependencies , scripts.
                 ii) It Include all the dependency with version of the project without this dependency project will not run.
                     Example -  "dependencies": {
                                     "express": "^4.18.3"
                                  }
                 iii) It Include Scripts like start , run , build that we can do in our projects.
                     Example - "scripts": {
                                  "start": "node index.js"
                                 },

2) package-lock.json-

                 i)  package-lock.json is a file that is automatically generated by npm when a package is installed. It records the exact version
                     of every installed dependency, including its sub-dependencies and their versions.
                 ii) when a project was deployed or shared with others, there was a risk that different developers or machines would 
                    use different versions of the same dependency, which could cause compatibility issues or unexpected behavior.
                    Using package-lock.json this problem solve.

-------------------------------------------------------------------------------------------------------------------------------------
Question 3) NPM VS Yarn

-------------------------------------------------------------------------------------------------------------------------------------
